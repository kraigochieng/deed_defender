#pragma version 8
intcblock 0 1
bytecblock 0x 0x6c616e645f7265666572656e63655f6e756d626572 0x7469746c655f646565645f6e756d626572
txn NumAppArgs
intc_0 // 0
==
bnz main_l6
txna ApplicationArgs 0
pushbytes 0xcf20546f // "register_land(string,string)void"
==
bnz main_l5
txna ApplicationArgs 0
pushbytes 0xad6c0ba3 // "verify_land_details(string)uint64"
==
bnz main_l4
err
main_l4:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub verifylanddetailscaster_4
intc_1 // 1
return
main_l5:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub registerlandcaster_3
intc_1 // 1
return
main_l6:
txn OnCompletion
intc_0 // NoOp
==
bnz main_l8
err
main_l8:
txn ApplicationID
intc_0 // 0
==
assert
callsub create_0
intc_1 // 1
return

// create
create_0:
proto 0 0
bytec_1 // "land_reference_number"
bytec_0 // ""
app_global_put
bytec_2 // "title_deed_number"
bytec_0 // ""
app_global_put
retsub

// register_land
registerland_1:
proto 2 0
bytec_1 // "land_reference_number"
frame_dig -2
extract 2 0
app_global_put
bytec_2 // "title_deed_number"
frame_dig -1
extract 2 0
app_global_put
retsub

// verify_land_details
verifylanddetails_2:
proto 1 1
intc_0 // 0
frame_dig -1
extract 2 0
bytec_1 // "land_reference_number"
app_global_get
==
bnz verifylanddetails_2_l2
intc_0 // 0
frame_bury 0
b verifylanddetails_2_l3
verifylanddetails_2_l2:
intc_1 // 1
frame_bury 0
verifylanddetails_2_l3:
retsub

// register_land_caster
registerlandcaster_3:
proto 0 0
bytec_0 // ""
dup
txna ApplicationArgs 1
frame_bury 0
txna ApplicationArgs 2
frame_bury 1
frame_dig 0
frame_dig 1
callsub registerland_1
retsub

// verify_land_details_caster
verifylanddetailscaster_4:
proto 0 0
intc_0 // 0
bytec_0 // ""
txna ApplicationArgs 1
frame_bury 1
frame_dig 1
callsub verifylanddetails_2
frame_bury 0
pushbytes 0x151f7c75 // 0x151f7c75
frame_dig 0
itob
concat
log
retsub